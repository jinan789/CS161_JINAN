- code_repository/Comptroller_0xBafE01ff935C7305907c33BF824352eE5979B526/ComptrollerInterface.sol:   Summary of the entire contract: The Liquidity/Liquidation Calculation contract provides a single external view function to calculate the required collateral tokens to be seized and the remaining borrowed tokens after liquidation. This is useful for protocols implementing liquidation mechanisms to enable efficient and transparent calculation of liquidation amounts.  
- code_repository/Comptroller_0xBafE01ff935C7305907c33BF824352eE5979B526/PriceOracle.sol:  Summary of the entire contract: The PriceOracle contract provides an interface to obtain the underlying price of a cToken asset. This contract only has a single function, getUnderlyingPrice(), which takes in a cToken as a parameter and returns the underlying asset price mantissa (scaled by 1e18). A zero value returned signifies that the price is unavailable. Additionally, the contract includes a boolean variable, isPriceOracle, indicating that it is a PriceOracle contract for inspection purposes.
- code_repository/Comptroller_0xBafE01ff935C7305907c33BF824352eE5979B526/ErrorReporter.sol:  Summary of the entire contract: The ComptrollerErrorReporter and TokenErrorReporter contracts provide error reporting functionality for other contracts in the system. They allow reporting known errors from money markets and non-upgradeable collaborators, as well as opaque errors from upgradeable collaborator contracts. These contracts define enums for Error and FailureInfo and use internal functions (fail, failOpaque) to emit Failure events and return error codes as uints.
- code_repository/Comptroller_0xBafE01ff935C7305907c33BF824352eE5979B526/ComptrollerStorage.sol:  Summary of the entire contract: The Comptroller contract is a complex contract involving multiple inheritance levels, with each level extending a previous version. It starts from basic administration properties in UnitrollerAdminStorage and expands towards more complex functionalities like market listings, COMP token distribution, borrow caps, contributor rewards, and fixing COMP accruals related to the Proposal 62 bug.