<CODE_BEGINNING>
function verifyCallResult(
    bool success,
    bytes memory returndata,
    string memory errorMessage
) internal pure returns (bytes memory) {
    if (success) {
        return returndata;
    } else {
        // Look for revert reason and bubble it up if present
        if (returndata.length > 0) {
            // The easiest way to bubble up the revert reason is using memory via assembly
            assembly {
                let result := mload(0x40)
                mstore(0x40, add(result, and(add(add(returndata, 32), mload(returndata)), 0xffffffffffffffff)))
                mstore(result, returndata)
                revert(result, add(32, mload(returndata)))
            }
        } else {
            revert(errorMessage);
        }
    }
}
<CODE_ENDING>