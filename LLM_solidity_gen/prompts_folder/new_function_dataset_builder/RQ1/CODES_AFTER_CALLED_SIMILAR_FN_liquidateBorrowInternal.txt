

function liquidateBorrowInternal(address liquidator, address borrower, uint repayAmount, CTokenInterface cTokenCollateral) internal returns (uint, uint) {
    // Accrue interest on the borrowed asset and the collateral asset
    uint errorCode = accrueInterest();
    if (errorCode != 0) {
        return (errorCode, 0);
    }
    errorCode = cTokenCollateral.accrueInterest();
    if (errorCode != 0) {
        return (errorCode, 0);
    }

    // Call liquidateBorrowFresh function to perform the process of repaying borrowed amount and seizing collateral
    (uint err, uint actualRepayAmount) = liquidateBorrowFresh(liquidator, borrower, repayAmount, cTokenCollateral);
    if (err != 0) {
        return (err, 0);
    }

    return (uint(Error.NO_ERROR), actualRepayAmount);
}

function liquidateBorrow(address borrower, uint repayAmount, CTokenInterface cTokenCollateral) external nonReentrant returns (uint, uint) {
    return liquidateBorrowInternal(msg.sender, borrower, repayAmount, cTokenCollateral);
}

