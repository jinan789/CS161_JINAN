Your job is to find if a given chunk of Solidity codes contains any lines of codes that exhibit a specific pattern that is given below. The reason we want to find the specific pattern is that we want to fix the codes that waste gas during deployment or running. More information is given below:

First, let's clarify the concept of gas: gas refers to the unit that measures the amount of computational effort required to execute specific operations on the Ethereum network. Since each Ethereum transaction requires computational resources to execute, each transaction requires a fee. Gas refers to the fee required to execute a transaction on Ethereum, regardless of transaction success or failure.

Second, let's specify the type of patterns that we want to find. The specific type of pattern we want to identify here is called "Expensive operations in a loop." It is classified under the "Loop-related Patterns" category. More specifically, it refers to the pattern where expensive operations (in terms of gas consumption for Solidity smart contracts) are executed multiple times in a loop, but such expensive operation could be moved out of the loop such that it executed less number of times, without affecting the functionality of the codes. 

The expensive operations in a loop are worth attention because they may execute multiple times in one invocation. Moving the expensive operations out of the loop can save gas. 
For example, since storage-related operations are very expensive, one optimization we could do is to assign variables stored in the storage to a local variable (e.g., tmp) that resides in the stack, then perform actions on tmp inside the loop, and finally after the loop, assign tmp back to the variable that was replaced. Such optimization reduces the storage-related operations from once per loop to only once before and after the loop.


Third, let's give you the codes from which we want to find the specified patterns, and please tell me if it contains any such patterns. In addition, if it contains any such patterns, please also tell me the where the codes exhibiting such patterns are, as well as the statements that are guaranteed to not be executed. If there are multiple pieces of codes that contain the specified patterns, make sure to contain each occurrence in the output. The codes are: 
