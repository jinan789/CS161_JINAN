1. Repeated computation of the same expression {} <Keerthi2021smart, Kong2022characterizing> 

2. Extractable code chunks{} <> 

3. State Variable Refactoring{} <Lodovica2020design>

4. Redundant operations with same effects{Lodovica2020design} <Kong2022characterizing, park2017saving, sorbo2022profiling, zhao2023gassaver>

5. Pre-computable operations on constants{} <Chen2017underoptimized>

6. Deterministic conditional checks{Keerthi2021smart, Chen2017underoptimized, zhao2023gassaver} <>

7. Conditional statements with simpler equivalents{Nguyen2022gassaver} <>

8. DELETED (Refactorable function){} <>

9. Replacing item-by-item iterated arrays by a map{Lodovica2020design, sorbo2022profiling} <>

10. Conditionally execute unnecessarily universal operations{} <>

11. Repeated security checks across function calls{} <zhao2023gassaver>

12. Unnecessarily introducing variables{} <>

13. UMBRELLA TERM UNDER 1{} <>

14. DELETED (Excessive usage of try-catches){} <>

15. Unnecessary overflow/underflow validation since Solidity 0.8.0{} <>

16. UMBRELLA TERM UNDER 11{} <>

17. Redundant memory array initialization{} <>

18. Placement of require statements{} <>

19. Avoid no-op writes to state variables{} <Lodovica2020design>

20. Reordering conditional checks for short-circuiting{Lodovica2020design} <Kong2022characterizing, zhao2023gassaver>

21. Combinable events{} <>

22. UMBRELLA TERM UNDER 15{} <>

23. add constant modifier for non-changing variables{park2017saving, Nguyen2022gassaver} <>

24. UMBRELLA TERM UNDER 32{} <>

25. Function visibility{Lodovica2020design, Kong2022characterizing, Nguyen2022gassaver} <park2017saving, sorbo2022profiling>

26. Dead codes{Chen2017underoptimized, zhao2023gassaver} <>

27. UMBRELLA TERM UNDER 28{} <>

28. Using revert instead of require for error handling{} <>

29. Minimization of event message string{} <>

30. Replacing MUL/DIV of powers of 2 by SHL/SHR{} <>

31. Struct variable reordering{Nguyen2022gassaver} <Lodovica2020design, Kong2022characterizing, park2017saving>

32. Loop invariant codes{Keerthi2021smart, Chen2017underoptimized, Nguyen2022gassaver, zhao2023gassaver} <>

33. Avoid expensive operations inside loops{Chen2017underoptimized} <Keerthi2021smart, sorbo2022profiling, zhao2023gassaver>

34. Struct refactoring by usage frequency{chen2022synthesispowered} <>

