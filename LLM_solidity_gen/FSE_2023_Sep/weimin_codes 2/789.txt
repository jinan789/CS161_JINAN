contract CreatorRegistry is ICreatorRegistry, IERC165 {
    function getCreatorOf(address nftContract_, uint256 tokenId_) external view override returns (address) {
        // Foundation V1
        if (nftContract_ == FoundationContracts.FOUNDATION_V1) {
            try IFoundationNftV1TokenCreator(FoundationContracts.FOUNDATION_V1).tokenCreator(tokenId_) returns (
                address payable creator
            ) {
                return creator;
            } catch {}
        }

        if (nftContract_ == SuperRareContracts.SUPERRARE_V1 || nftContract_ == SuperRareContracts.SUPERRARE_V2) {
            try ISuperRareRegistry(SuperRareContracts.SUPERRARE_REGISTRY).tokenCreator(nftContract_, tokenId_) returns (
                address payable creator
            ) {
                return creator;
            } catch {}
        }

        if (nftContract_.code.length > 0) {
            // Foundation V2 (Creator-owned Collections)
            try IFoundationNftV1TokenCreator(nftContract_).tokenCreator(tokenId_) returns (address payable creator) {
                return creator;
            } catch {}

            // Fallback to returning the owner of the NFT contract as the creator
            try Ownable(nftContract_).owner() returns (address owner) {
                return owner;
            } catch {}

            revert("Cannot determine creator of NFT");
        } else {
            revert("No code at given NFT address");
        }
    }

    function supportsInterface(bytes4 interfaceId) external pure returns (bool) {
        return interfaceId == type(ICreatorRegistry).interfaceId;
    }
}
